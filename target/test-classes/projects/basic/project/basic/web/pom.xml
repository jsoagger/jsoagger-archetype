<?xml version="1.0" encoding="UTF-8"?>
<!-- ========================LICENSE_START================================= 
	JSoagger %% Copyright (C) 2019 JSOAGGER %% Licensed under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance 
	with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. 
	=========================LICENSE_END================================== --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>archetype.it</groupId>
		<artifactId>basic</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>

	<artifactId>web</artifactId>
	<packaging>jar</packaging>

	<name>JSoagger WEB UI Quick start</name>
	<description>JSoagger Web UI Quick start</description>
	<url>https://github.com/jsoagger/</url>

	<properties>
		<jsoagger-web-module.name>jsoagger-webdev</jsoagger-web-module.name>
		<jsoagger-web-module.version>1.0.0-SNAPSHOT</jsoagger-web-module.version>
		<skip.docker.build>true</skip.docker.build>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<configuration>
					<repository>helloworld/starter-web-reactapp</repository>
					<skipBuild>${skip.docker.build}</skipBuild>
					<tag>${project.version}</tag>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
			</properties>
		</profile>
		
		<profile>
			<id>install-reactapp</id>
			<properties>
				<skip.docker.build>true</skip.docker.build>
			</properties>			
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>io.github.jsoagger</groupId>
											<artifactId>${jsoagger-web-module.name}</artifactId>
											<version>${jsoagger-web-module.version}</version>
											<outputDirectory>${project.build.directory}/reactapp-src</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>copy-resources01</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/public</outputDirectory>
									<encoding>UTF-8</encoding>
									<resources>
										<resource>
											<directory>${project.build.directory}/reactapp-src/_public</directory>
											<includes>
												<include>**/*.*</include>
												<include>**/*.json</include>
												<include>**/*.css</include>
												<include>**/*.scc</include>
												<include>**/*.scss</include>												
												<include>**/assets/**</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources04</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<outputDirectory>${basedir}/public/assets/img</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/reactapp-src/_public/assets/img</directory>
											<includes>
												<include>**/*</include>
												<include>**/*.json</include>
												<include>**/*.css</include>
												<include>**/*.scc</include>
												<include>**/*.scss</include>												
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources02</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/src</outputDirectory>
									<encoding>UTF-8</encoding>
									<resources>
										<resource>
											<directory>${project.build.directory}/reactapp-src/_src</directory>
											<includes>
												<include>**/*</include>
												<include>**/assets/img/desktop1.png</include>
												<include>**/*.json</include>
												<include>**/*.css</include>
												<include>**/*.scc</include>
												<include>**/*.scss</include>												
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources03</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/src/assets/img</outputDirectory>
									<encoding>UTF-8</encoding>
									<resources>
										<resource>
											<directory>${project.build.directory}/reactapp-src/_src/assets/img</directory>
											<includes>
												<include>**/*</include>
												<include>**/*.json</include>
												<include>**/*.css</include>
												<include>**/*.scc</include>
												<include>**/*.scss</include>												
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>npm-install</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<configuration>
							<nodeVersion>v12.10.0</nodeVersion>
							<npmVersion>6.11.3</npmVersion>
							<workingDirectory>.</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>Install node and npm locally to the project</id>
								<phase>package</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
							</execution>
							<execution>
								<id>npm install</id>
								<phase>package</phase>								
								<goals>
									<goal>npm</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
