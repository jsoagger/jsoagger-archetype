<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
	<groupId>archetype.it</groupId>
	<artifactId>basic</artifactId>
	<version>0.1-SNAPSHOT</version>
	</parent>
	
	<artifactId>microservice</artifactId>
	<packaging>jar</packaging>

	<name>JSoagger MicroServices Quick start</name>
	<url>https://github.com/jsoagger/</url>

	<properties>
		<hibernate.version>5.4.0.Final</hibernate.version>
		<hibernate.orm.version>5.4.0.Final</hibernate.orm.version>
		<springframework.boot.version>2.1.2.RELEASE</springframework.boot.version>
		<failOnMissingWebXml>false</failOnMissingWebXml>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springframework.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.github.jsoagger</groupId>
			<artifactId>jsoagger-corebusiness-services</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<classifier>lib</classifier>
		</dependency>
		<dependency>
			<groupId>org.codehaus.castor</groupId>
			<artifactId>castor</artifactId>
			<version>1.2</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>io.github.jsoagger</groupId>
			<artifactId>jsoagger-core-bridge</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>


		<dependency>
			<groupId>io.github.jsoagger</groupId>
			<artifactId>jsoagger-core-utils</artifactId>
			<version>1.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>


	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources/</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${springframework.boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>sb</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<fork>true</fork>
				</configuration>
			</plugin>
			
			<!-- Docker integration -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<configuration>
					<repository>helloworld/starter-foundation-srv</repository>
					<skipBuild>${skip.docker.build}</skipBuild>
					<tag>${project.version}</tag>
				</configuration>
			</plugin>
			
			<!-- Docker integration, To ensure the jar is unpacked before the docker 
				image is created we add some configuration for the dependency plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>archetype.it</groupId>
									<artifactId>microservice</artifactId>
									<version>${project.version}</version>
									<classifier>sb</classifier>
									<outputDirectory>${project.build.directory}/dependency</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
			</properties>
		</profile>
	</profiles>		
</project>
