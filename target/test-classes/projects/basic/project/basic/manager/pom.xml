<?xml version="1.0" encoding="UTF-8"?>
<!-- ========================LICENSE_START================================= 
	JSoagger  %% Copyright (C) 2019 JSOAGGER %% Licensed under the Apache 
	License, Version 2.0 (the "License"); you may not use this file except in 
	compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. 
	=========================LICENSE_END================================== --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
	<groupId>archetype.it</groupId>
	<artifactId>basic</artifactId>
	<version>0.1-SNAPSHOT</version>
	</parent>
	
	<artifactId>manager</artifactId>
	<packaging>jar</packaging>

	<description>JSoagger Manager</description>
	<name>JSoagger CLI quick start</name>
	<url>https://github.com/jsoagger/</url>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.shell</groupId>
			<artifactId>spring-shell-starter</artifactId>
			<version>${spring.shell.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.jsoagger</groupId>
			<artifactId>jsoagger-manager</artifactId>
			<version>1.0.0</version>
		</dependency>

		
		<!-- Integration testing -->
		<dependency>
			<groupId>com.palantir.docker.compose</groupId>
			<artifactId>docker-compose-rule-junit4</artifactId>
			<version>0.31.1</version>
		</dependency>
		<dependency>
			<groupId>com.palantir.docker.compose</groupId>
			<artifactId>docker-compose-rule-core</artifactId>
			<version>0.31.1</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>application.properties</exclude>
					<exclude>banner.txt</exclude>
					<exclude>incompatible-server-versions*</exclude>
					<exclude>jndi*</exclude>
					<exclude>log4j*</exclude>
				</excludes>
			</testResource>
		</testResources>

		<plugins>
			<!-- This will generate a fat jar including all libraries dependencies 
				of project -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>sb</classifier>
							<mainClass>io.github.jsoagger.core.server.admin.JSoaggerShellRunner</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- Run project compilation with profile integration if environment is 
				OK: mvn clean verify/install -P integration-test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18</version>
			</plugin>
			
			<!-- Docker integration -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<configuration>
					<repository>helloworld/starter-foundation-manager</repository>
					<skipBuild>${skip.docker.build}</skipBuild>
					<tag>${project.version}</tag>
				</configuration>
			</plugin>

		</plugins>

		<finalName>starter-manager</finalName>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.google.code.maven-replacer-plugin</groupId>
										<artifactId>replacer</artifactId>
										<versionRange>[1.5.3,)</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<skip.docker.build>false</skip.docker.build>
			</properties>
		</profile>
	</profiles>	
</project>
