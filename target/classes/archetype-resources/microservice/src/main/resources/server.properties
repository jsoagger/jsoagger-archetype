#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound} Creating person needs a type, the default type is : io.github.jsoagger.Person/User
application.person.default.type=io.github.jsoagger.Person/User

${symbol_pound}the admin user nickname
application.administrator.nickname=@{mvn_set_application.application.administrator.nickname}

${symbol_pound}Differents path
application.home=@{mvn_set_application.home}
application.log.dir=@{mvn_set_application.log.dir}
application.temp.dir=@{mvn_set_application.temp.dir}
application.install.log.dir=@{mvn_set_application.install.log.dir}
application.install.batch.log.dir=@{mvn_set_application.install.batch.log.dir}
application.install.batch.discarded.dir=@{mvn_set_application.install.batch.discarded.dir}
application.batch.log.dir=@{mvn_set_application.batch.log.dir}
application.remote.import.temp.dir=@{mvn_set_application.remote.import.temp.dir}

application.knoer.annotations.class=io.github.jsoagger.core.model.api.contact.Contactable.class,io.github.jsoagger.core.model.api.foldered.Foldered.class,io.github.jsoagger.core.model.api.lifecyclemanaged.LifecycleManaged.class,io.github.jsoagger.core.model.api.contentHolder.ContentHolder.class
application.knoer.scan.package.prefix=io.github.jsoagger.core, ext.example.xxx

${symbol_pound}Used to map soft attributes to database column
${symbol_pound}If additionnal columns are added to table, max attributes must be incremented by the number of the number of these columns
io.github.jsoagger.core.softattribute.first.col.number=1
io.github.jsoagger.core.softattribute.max.col.number=10
io.github.jsoagger.core.softattribute.master.max.col.number=10

${symbol_pound}searchable 
search.searchableTypes.location.path=/searchableTypes.xml


${symbol_pound} Server default language
ADD_PREFERENCE|io.github.jsoagger.server.langage=en

${symbol_pound} defautl date format in server
ADD_PREFERENCE|io.github.jsoagger.server.date.format=dd-mm-yyyy hh:MM:ss


${symbol_pound}sender of all emaim from system
system.email.sender=@{mvn_set_application.system.email.address}
system.startup.mail.recipients=@{mvn_set_application.system.email.address}
system.shutdown.mail.recipients=@{mvn_set_application.system.email.address}

${symbol_pound}email configuration
mail.host=@{mvn_set_application.mail.host}
mail.port=@{mvn_set_application.mail.port}
mail.username=@{mvn_set_application.mail.username}
mail.password=@{mvn_set_application.mail.password}
mail.transport.protocol=@{mvn_set_application.mail.transport.protocol}
mail.smtp.auth=@{mvn_set_application.mail.smtp.auth}
mail.debug=@{mvn_set_application.mail.debug}
mail.smtp.starttls.enable=@{mvn_set_application.mail.smtp.starttls.enable}

send.email.on.startup=@{mvn_set_application.send.email.on.startup}
send.email.on.shutdown=@{mvn_set_application.send.email.on.shutdown}

startup.mail.key=PLATFORM_STARTUP_MAIL
startup.mail.key=PLATFORM_SHUTDOWN_MAIL
${symbol_pound}Displayed name on the clien side
system.email.display.name=@{mvn_set_application.system.email.display.name}

${symbol_pound}environnement mode: DEV, PROD, INT. Some functionnality may be disactivated depending environment
env.mode=@{mvn_set_application.env.mode}

${symbol_pound}default password for new users
default.password=@{mvn_set_application.application.default.password}


${symbol_pound} person unicity provider: used to determine if given person is unique in application
${symbol_pound} it can be used in import to skip exiting person
person.unicity.bean.validator=DefaultPersonUnicityValidator


${symbol_pound} override or exception : when creating a container, a root folder with same name is created
${symbol_pound} in some cases, the root folder already exist
${symbol_pound} If strategy is override: the container info of the folder is updated
${symbol_pound} If strategy is exception: an exception will be thrown
root.folder.override.strategy=override


${symbol_pound} demoapp location for download
desktop.setup.location=/jfx/setup_desktop.xml
mobile.setup.location=/jfx/setup_mobile.xml

